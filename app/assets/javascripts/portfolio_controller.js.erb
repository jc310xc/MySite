// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.
$(document).ready(function(){
  var bgs = ["<%= asset_path 'dark_geometric.png' %>", "<%= asset_path '3px-tile.png' %>", "<%= asset_path 'dark_mosaic.png' %>"];
  var bgNames = ["Dark Geometric", "3px Tile", "Dark Mosaic"];

  console.log(bgs);

  var currbg = 0;
  $(document).on('keyup', function(e){
    if(e.keyCode == 40){
      currbg++;
      if(currbg == 3){
        currbg = 0;
      }

      alert(bgNames[currbg]);
      //$("body").css({"background-color" : "#FF0000"});
      $("body").css({"background-image": "url("+bgs[currbg]+")"});
    }
  });

  var ctx;
  var x = 0;
  var y = 0;
  var width = $("#mazeCanvas").width();
  var height = $("#mazeCanvas").height();
  var squareSize = 30;
  var xMax = Math.floor(width/squareSize);
  var yMax = Math.floor(height/squareSize);
  var mazeArr;

  var count = 0;

  function initMaze(){
    var maze = [];
    for(var i = 0; i < xMax; i++){
      maze[i] = [];
      for(var j = 0; j < yMax; j++){
        maze[i][j] = Math.round(Math.random());
      }
    }

    return maze;
  }

  function logMaze(maze){
    for(var i = 0; i < xMax; i++){
      var outStr = "";
      for(var j = 0; j < yMax; j++){
        outStr += maze[i][j] + ",";
      }
      console.log(outStr);
    }
  }

  function init() {
    ctx = $('#mazeCanvas')[0].getContext("2d");

    ctx.fillStyle = "#BADA55";
    ctx.clearRect(0,0,width,height);

    var mazeArr = initMaze();
    logMaze(mazeArr);

    for(i = 0; i < mazeArr.length; i++){
      for(j = 0; j < mazeArr[i].length; j++){
        if(mazeArr[i][j] == 1){
          var drawX = i * (squareSize + 1);
          var drawY = j * (squareSize + 1);
          ctx.fillRect(drawX, drawY, squareSize, squareSize);
        }
      }
    }
  }

  init();
});
